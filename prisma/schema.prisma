generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model CustomersAnthia {
  CostumerID Int      @id(map: "PK_CustomersAnthia") @default(autoincrement())
  FirstName  String   @db.NVarChar(50)
  LastName   String   @db.NVarChar(50)
  Address    String?  @db.NVarChar(150)
  City       String?  @db.NVarChar(50)
  State      String?  @db.NVarChar(50)
  Orders     Orders[]
}

model Orders {
  OrderID         Int             @id(map: "PK_Orders") @default(autoincrement())
  OrderDate       DateTime        @db.Date
  CustomerID      Int
  ProductID       String          @db.NVarChar(50)
  Quantity        Int
  CustomersAnthia CustomersAnthia @relation(fields: [CustomerID], references: [CostumerID], onUpdate: NoAction, map: "FK_Orders_CustomersAnthia")
  ProductsAnthia  ProductsAnthia  @relation(fields: [ProductID], references: [ProductID], onUpdate: NoAction, map: "FK_Orders_ProductsAnthia")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ProductCategories {
  CategoryID           Int    @default(autoincrement())
  CategoryName         String @db.VarChar(25)
  CategoryAbbreviation String @db.Char(2)

  @@ignore
}

model ProductsAnthia {
  Category        String    @default("N'eBooks'", map: "DF_ProductsAnthia_Category") @db.NVarChar(50)
  ProductID       String    @id(map: "PK_ProductsAnthia") @db.NVarChar(50)
  Name            String    @unique(map: "UX_Products_Name") @db.NVarChar(50)
  RetailPrice     Float     @db.Money
  ManufactureCost Float     @db.Money
  QtyInStock      Int
  Timestamp       DateTime? @default(now(), map: "DF_ProductsAnthia_Timestamp")
  Orders          Orders[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B6199E821FE") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model Users {
  Email    String  @id(map: "PK_Users") @db.VarChar(25)
  Password String? @db.NVarChar(25)
}
