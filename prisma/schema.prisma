generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Customers {
  CustomerID Int     @id(map: "PK_CustomersAnthia") @default(autoincrement())
  FirstName  String  @db.NVarChar(50)
  LastName   String  @db.NVarChar(50)
  Address    String? @db.NVarChar(150)
  City       String? @db.NVarChar(50)
  State      String? @db.NVarChar(50)
}

model Delivery {
  DeliveryID    Int    @id(map: "PK__Delivery__626D8FEE7E3C80DA") @default(autoincrement())
  OrderID       Int
  FullName      String @db.NVarChar(255)
  Street        String @db.NVarChar(255)
  StreetNumber  String @db.NVarChar(50)
  City          String @db.NVarChar(255)
  PostalCode    String @db.NVarChar(50)
  Country       String @db.NVarChar(255)
  PaymentMethod String @db.NVarChar(50)
  Orders        Orders @relation(fields: [OrderID], references: [OrderID], onUpdate: NoAction, map: "FK_Delivery_OrderID")
}

model OrderProduct {
  OrderID   Int
  ProductID Int
  Quantity  Int
  Orders    Orders   @relation(fields: [OrderID], references: [OrderID], onDelete: Cascade, onUpdate: NoAction, map: "FK__OrderProd__Order__65370702")
  Products  Products @relation(fields: [ProductID], references: [ProductID], onDelete: Cascade, onUpdate: NoAction, map: "FK__OrderProd__Produ__662B2B3B")

  @@id([OrderID, ProductID], map: "PK__OrderPro__08D097C17991A3C4")
}

model Orders {
  OrderID      Int            @id(map: "PK__Orders__C3905BAF7CFAF49D") @default(autoincrement())
  OrderDate    DateTime?      @default(now(), map: "DF__Orders__OrderDat__05A3D694") @db.DateTime
  ProductID    Int?
  Quantity     Int?
  Email        String?        @db.VarChar(50)
  totalAmount  Float?
  Delivery     Delivery[]
  OrderProduct OrderProduct[]
  Products     Products?      @relation(fields: [ProductID], references: [ProductID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Orders_Products")
  Users        Users?         @relation(fields: [Email], references: [Email], onDelete: NoAction, onUpdate: NoAction, map: "FK_Orders_Users")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ProductCategories {
  CategoryID           Int    @default(autoincrement())
  CategoryName         String @db.VarChar(25)
  CategoryAbbreviation String @db.Char(2)

  @@ignore
}

model Products {
  ProductID    Int            @id(map: "PK__Products__B40CC6ED63D7A053") @default(autoincrement())
  Category     String         @db.NVarChar(50)
  Name         String         @db.NVarChar(100)
  RetailPrice  Decimal        @db.Decimal(10, 2)
  QtyInStock   Int
  ImageURL     String?
  OrderProduct OrderProduct[]
  Orders       Orders[]
  Wishlist     Wishlist[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B6199E821FE") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model Users {
  UserID       Int        @default(autoincrement())
  Email        String     @id(map: "PK_Users") @db.VarChar(50) @unique
  FirstName    String?    @db.VarChar(50)
  LastName     String?    @db.VarChar(50)
  Gender       String?    @db.VarChar(3)
  Username     String?    @db.VarChar(30) @unique

  Password     String?    @db.NVarChar(255)
  AgreeToTerms Boolean?
  Orders       Orders[]
  Wishlist     Wishlist[]
}

model Wishlist {
  WishlistID Int      @id(map: "PK__Wishlist__233189CB9086D5D8") @default(autoincrement())
  Email      String   @db.VarChar(50)
  Username   String   @db.VarChar(30)
  ProductID  Int
  Quantity   Int?     @default(1, map: "DF__Wishlist__Quanti__00DF2177")
  Products   Products @relation(fields: [ProductID], references: [ProductID], onUpdate: NoAction, map: "FK_Wishlist_Products")
  Users      Users    @relation(fields: [Email], references: [Email], onUpdate: NoAction, map: "FK_Wishlist_Users")
}
