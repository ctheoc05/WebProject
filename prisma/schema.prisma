generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Delivery {
  DeliveryID    Int    @id(map: "PK__Delivery__626D8FEE65857B99") @default(autoincrement())
  OrderID       Int
  FullName      String @db.NVarChar(255)
  Street        String @db.NVarChar(255)
  StreetNumber  String @db.NVarChar(50)
  City          String @db.NVarChar(255)
  PostalCode    String @db.NVarChar(50)
  Country       String @db.NVarChar(255)
  PaymentMethod String @db.NVarChar(50)
  Orders        Orders @relation(fields: [OrderID], references: [OrderID], onUpdate: NoAction, map: "FK_Delivery_OrderID")
}

model OrderProduct {
  OrderID     Int
  ProductID   Int
  Quantity    Int
  ProductName String?  @db.NVarChar(100)
  Orders      Orders   @relation(fields: [OrderID], references: [OrderID], onDelete: Cascade, onUpdate: NoAction, map: "FK__OrderProd__Order__65370702")
  Products    Products @relation(fields: [ProductID], references: [ProductID], onDelete: Cascade, onUpdate: NoAction, map: "FK__OrderProd__Produ__662B2B3B")

  @@id([OrderID, ProductID], map: "PK__OrderPro__08D097C12B54A1B3")
}

model Orders {
  OrderID      Int            @id(map: "PK__Orders__C3905BAF696A0F37") @default(autoincrement())
  OrderDate    DateTime?      @default(now(), map: "DF__Orders__OrderDat__3D5E1FD2") @db.DateTime
  ProductID    Int?
  Quantity     Int?
  UserID       Int?
  totalAmount  Float?
  Delivery     Delivery[]
  OrderProduct OrderProduct[]
  Products     Products?      @relation(fields: [ProductID], references: [ProductID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Orders_Products")
  Users        Users?         @relation(fields: [UserID], references: [UserID], onDelete: NoAction, onUpdate: NoAction, map: "FK__Orders__UserID__3E52440B")
}

model Products {
  ProductID    Int            @id(map: "PK__Products__B40CC6ED95FFA4F2") @default(autoincrement())
  Category     String         @db.NVarChar(50)
  Name         String         @db.NVarChar(100)
  RetailPrice  Decimal        @db.Decimal(10, 2)
  QtyInStock   Int
  ImageURL     String?        @db.NVarChar(255)
  Description  String?        @db.NVarChar(255)
  OrderProduct OrderProduct[]
  Orders       Orders[]
  Wishlist     Wishlist[]
}

model Users {
  UserID       Int        @id(map: "PK__Users__1788CCACD5920D28") @default(autoincrement())
  Email        String     @unique(map: "UQ__Users__A9D10534E1EBB666") @db.VarChar(50)
  FirstName    String?    @db.VarChar(50)
  LastName     String?    @db.VarChar(50)
  Gender       String?    @db.VarChar(3)
  Username     String?    @unique(map: "UQ__Users__536C85E4A72F1B07") @db.VarChar(30)
  Password     String?    @db.NVarChar(255)
  AgreeToTerms Boolean?
  Orders       Orders[]
  Wishlist     Wishlist[]
}

model Wishlist {
  WishlistID Int      @id(map: "PK__Wishlist__233189CB18B1C64E") @default(autoincrement())
  UserID     Int
  ProductID  Int
  Quantity   Int?     @default(1, map: "DF__Wishlist__Quanti__48CFD27E")
  Products   Products @relation(fields: [ProductID], references: [ProductID], onUpdate: NoAction, map: "FK_Wishlist_Products")
  Users      Users    @relation(fields: [UserID], references: [UserID], onUpdate: NoAction, map: "FK__Wishlist__UserID__49C3F6B7")
}
